<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace = "board">
<!-- sql 문장 기술주의 상향 : ";" 반드시 생략 -->
	<select id = "list" resultType = "board.dto.BoardDTO">
	<!-- rownum 가상 필드에 행번호 붙이기 전 까지 정상작동된 조건 -->
<!-- 		select num, writer, subject, passwd, reg_date, filesize, readcount, filename, down, ref, re_step, re_level, content,
			   (select count(*) from board_comment where board_num = num) as comment_count
		from board 
		order by ref desc, re_step asc -->
		
	 	SELECT * FROM(
		    SELECT ROWNUM RN, A.* 
		    FROM (
		        select num, writer, subject, passwd, reg_date, readcount,  ref, re_step, re_level, content,
					   (select count(*) from board_comment where board_num = num) as comment_count
				from board
		    ) A
		)
		WHERE RN BETWEEN #{start} AND #{end}		
	</select>
		<!-- SELECT * FROM(
		    SELECT ROWNUM RN, A.* 
		    FROM (
		        select num, writer, subject, passwd, reg_date, filesize, readcount, filename, down, ref, re_step, re_level, content,
					   (select count(*) from board_comment where board_num = num) as comment_count
				from page_board
				order by ref desc, re_step asc
		    ) A
		)
		WHERE RN BETWEEN #{start} AND #{end}		 -->


	<!-- 
	2. 저장하는 sql
	<insert id="insert" parameterType="board.dto.BoardDTO">
		INSERT INTO board(num, writer, subject, passwd, ref, re_step, re_level, content, ip, filename, filesize) values
			(
			    (select nvl(max(num)+1,1) from board), 
			    #{writer},
			    #{subject},
			    #{passwd},
			    (select nvl(max(num)+1,1) from board),1,0,
			    #{content},
			    #{ip},
			    #{filename},
			    #{filesize}
			)
	</insert>
	-->
	
	<insert id = "insert" parameterType = "board.dto.BoardDTO">
	INSERT INTO board (num, writer, subject, passwd, ref, re_step,re_level, content, ip)
	VALUES   					  ((SELECT nvl(MAX(num)+1,1)FROM board),
										  #{writer},
										  #{subject},
										  #{passwd}, 
										  (SELECT nvl(MAX(num)+1,1)FROM board),
										  1,0,	<!-- re_step / re_level -->
										  #{content},
										  #{ip}
										  )
	</insert>
	
	<select id = "view" resultType = "board.dto.BoardDTO" parameterType = "int">
	SELECT * FROM board WHERE num=#{num}
	
	</select>
	
	<update id = "plusReadCount" parameterType = "int">
	UPDATE board SET readcount = readcount + 1 WHERE num = #{num}
	</update>
	
	<!-- 게시물 번호에 대한 댓글 목록 조회 sql -->
	<select id = "commentList" resultType = "board.dto.BoardCommentDTO">
		SELECT * FROM board_comment WHERE board_num = #{board_num}
		ORDER BY           comment_num DESC
	</select>
	
	<insert id = "commentAdd">
	INSERT INTO board_comment(comment_num, board_num, writer, content)
	VALUES      									((SELECT nvl(MAX(comment_num)+1,1) FROM board_comment), 
															 #{board_num},
															 #{writer},
															 #{content}
															 )
	</insert>
	
	<!-- 상세view페이지, 수정 전 게시물 비번 일치확인 -->
	<select id = "pass_check" resultType = "String">
	SELECT passwd FROM board WHERE num = #{num} and passwd = #{passwd}
	</select>
	
	<!-- 게시물 수정 sql -->
	<update id="update">
	UPDATE board 
	SET          writer = #{writer}, subject = #{subject}, content = #{content} 
	WHERE   num = #{num}
	</update>
	
	<delete id = "delete">
		DELETE FROM board WHERE num = #{num}
	</delete>
	
			
	<!-- board 테이블의 총 레코드 갯수 계산 sql -->
<!-- 	<select id="recordCount" resultType="int">
		select count(*) as recordCount from page_board
	</select> -->
	
	<select id="recordCount" resultType="int">
	SELECT COUNT(*)AS recordCount FROM board
	</select>
	
	<select id= "commentCount">
	SELECT COUNT(*) FROM board_comment WHERE board_num = #{board_num}
	</select>
	
	<!-- 
	게시물 출력 번호 순서 조정 (댓글 들여쓰기에 대한)
	<update id="updateStep">
		update board 
		set    re_step = re_step + 1 
		where  ref = #{ref} and re_step >= #{re_step}
	</update>
	게시물 번호에 대한 답글 저장
	<insert id="reply">
		INSERT INTO board
			(num, writer, subject, passwd, ref, re_step, re_level, content, ip, filename, filesize) 
		
		values
			(
			    (select nvl(max(num)+1,1) from board), 
			    #{writer},
			    #{subject},
			    #{passwd},
			    #{ref},#{re_step},#{re_level},
			    #{content},
			    #{ip},
			    #{filename},
			    #{filesize}
			)
	</insert>
	조건에 부합하는 검색 sql
	<select id="searchList" resultType="board.dto.BoardDTO">
		select   num, writer, subject, passwd, reg_date, filesize, readcount, filename, down, ref, re_step, re_level, content,
		         (select count(*) from board_comment where board_num = num) as comment_count
		from     board 
		<choose>
			<when test="search_option != 'all'">
				where ${search_option} like #{keyword}  
		    </when>
		    <when test="search_option == 'all'">
				where writer like #{keyword} or content like #{keyword} or subject like #{keyword}
			</when>
		</choose>
		order by ref desc, re_step 
	</select>
	 -->

</mapper>




